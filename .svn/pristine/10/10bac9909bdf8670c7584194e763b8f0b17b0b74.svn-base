#ifndef SPO2_H
#define SPO2_H

#include "main/environment.h"
#include <QtGui/QSplashScreen>
#include "pulse.h"

class Spo2: public Trend
{
public:
	Spo2(const QString &title, const QColor &color, QSplashScreen *splash, Pulse *pulse);
	~Spo2();

	struct Wave {
		quint32	mxPos;
		quint32	mnPos;
		Values::value_type spo2;

		Wave()
			: mxPos(0), mnPos(0), spo2(0)
		{}
		
		Wave(quint32 mxpos, quint32 mnpos, float value)
			: mxPos(mxpos), mnPos(mnpos), spo2(value)
		{}
	};

	typedef QVector<Wave> Waves;

	Waves &build(RawData &ir, RawData &red, RawData &smoothed, int startSample, Waves &waves, bool db = false);
	uchar computeSpo2(RawData::value_type x);
	double computeSpo2d(RawData::value_type x);

	static const QString spo2FileName_;
	static const QString spo2ChanFileName_;
	static const QString pulseFileName_;

private:
	Spo2Params params_;
	static QVector<int> maxpos_;
	static QVector<int> minpos_;
	static Values curDesaturation_;
	static int		smooth_te;
	int		lastFewSpo2;
};

#endif // SPO2_H